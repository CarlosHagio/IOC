RadTimeout = 100;
PollPeriod = 100;
ReplyTimeout = 2000;
OutTerminator = "";
InTerminator = "\r";
ExtraInput = Ignore;

error
{ in "NACK: %(\$1:ERRCMD.VAL)s is not successful.";
}

#resetfault
#{ out "write_resetfault";
#  in "ACK:%s"; @mismatch{error;};
#}
#

power
{ out "power %d";
  in "ACK: power %d"; @mismatch{error;};
}

gripper
{ out "gripper %d";
  in "ACK: gripper %d"; @mismatch{error;};
}

stop_move
{ out "stopMove ";
  in "ACK: stopMove"; @mismatch{error;};
}

restart_move
{ out "restartMove ";
  in "ACK: restartMove"; @mismatch{error;};
}

is_settled
{ out "isSettled ";
  in "ACK: isSettled %d"; @mismatch{error;};
}

move_x
{ out "moveX %f";
  in "ACK: moveX %f"; @mismatch{error;};
}

move_y
{ out "moveY %f";
  in "ACK: moveY %f"; @mismatch{error;};
}

move_z
{ out "moveZ %f";
  in "ACK: moveZ %f"; @mismatch{error;};
}

get_x
{ out "getX "; 
  in "ACK: getX %f"; @mismatch{error;};
}

get_y
{ out "getY "; 
  in "ACK: getY %f"; @mismatch{error;};
}

get_z
{ out "getZ "; 
  in "ACK: getZ %f"; @mismatch{error;};
}

set_frame
{ out "setFrame %d";
  in "ACK: setFrame %d"; @mismatch{error;};
}

set_tool
{ out "setTool %d";
  in "ACK: setTool %d"; @mismatch{error;};
}

