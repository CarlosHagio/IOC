record(stringin, "$(BL)$(CS8_2):ERRCMD") {
  field(DESC, "Error Command")
  field(PINI, "YES")  
}

#record(ao,"$(BL)$(CS8_2):ResetFault")
#{
#  field(DESC,"Reset Fault")
#  field(DTYP,"stream")
#  field(OUT,"@Staubli2.proto resetfault($(BL)$(CS8_2)) $(PORT)")
#}

#record(ao, "$(BL)$(CS8_2):LifeBit")
#{
#  field(DESC, "Keep alive")
#  field(DTYP, "stream")
#  field(SCAN, "2 second")
#  field(OUT, "@Staubli2.proto lifebit($(BL)$(CS8_2)) $(PORT)")
#}

#record(ao,"$(BL)$(CS8_2):On")
#{
#  field(DESC,"Power On controller")
#  field(DTYP,"stream")
#  field(OUT,"@Staubli2.proto set_on($(BL)$(CS8_2)) $(PORT)")
#}

#record(ao,"$(BL)$(CS8_2):Off")
#{
#  field(DESC,"Power Off controller")
#  field(DTYP,"stream")
#  field(OUT,"@Staubli2.proto set_off($(BL)$(CS8_2)) $(PORT)")
#}

#############################################         MOVEMENTS BEGINNING        ##########################################
record(bo, "$(BL)$CS8_2:MoveHomeToRack")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_home_to_rack($(BL)$(CS8_2)) $(PORT)")i
}
record(bo, "$(BL)$CS8_2:MoveRackToHome")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_rack_to_home($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHomeToDewar")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_home_to_dewar($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveDewarToHome")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_dewar_to_home($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHomeToHotel")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_home_to_hotel($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHotelToHome")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_hotel_to_home($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHomeToBeam")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_home_to_beam($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveBeamToHome")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_beam_to_home($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveRackToHotel")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_rack_to_hotel($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHotelToRack")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_hotel_to_rack($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveRackToDewar")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_rack_to_dewar($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveDewarToRack")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_dewar_to_rack($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveHotelToBeam")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_hotel_to_beam($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveBeamToHotel")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_beam_to_hotel($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveDewarToBeam")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_dewar_to_beam($(BL)$(CS8_2)) $(PORT)")
}
record(bo, "$(BL)$CS8_2:MoveBeamToDewar")
{
  field(DESC, "")
  field(DTYP, "stream")
  field(OUT, "@$(PROTO) move_beam_to_dewar($(BL)$(CS8_2)) $(PORT)")
}

record(mbbo, "$(BL)$(CS8_2):MoveHome")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_home($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "MoveHome0")
    field(ONVL, "1")
    field(ONST, "MoveHome1")
    field(TWVL, "2")
    field(TWST, "MoveHome2")
    field(THVL, "3")
    field(THST, "MoveHome3")
    field(FRVL, "4")
    field(FRST, "MoveHome4")
}
record(mbbo, "$(BL)$(CS8_2):MoveRack")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_rack($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "RackReference")
    field(ONVL, "1")
    field(ONST, "tLoopGripper")
    field(TWVL, "2")
    field(TWST, "tPlateGripper")
    field(THVL, "3")
    field(THST, "tEmpty3")
    field(FRVL, "4")
    field(FRST, "tEmpty4")
}
record(mbbo, "$(BL)$(CS8_2):MoveHotel")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_hotel($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "HotelReference")
    field(ONVL, "1")
    field(ONST, "Plate1")
    field(TWVL, "2")
    field(TWST, "Plate2")
    field(THVL, "3")
    field(THST, "Plate3")
    field(FRVL, "4")
    field(FRST, "Plate4")
    field(FVVL, "5")
    field(FVST, "Plate5")
    field(SXVL, "6")
    field(SXST, "Plate6")
    field(SVVL, "7")
    field(SVST, "Plate7")
    field(EIVL, "8")
    field(EIST, "Plate8")
    field(NIVL, "9")
    field(NIST, "Plate9")
    field(TEVL, "10")
    field(TEST, "Plate 10")
}
record(mbbo, "$(BL)$(CS8_2):MoveDewarA")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_dewar_a($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "a0")
    field(ONVL, "1")
    field(ONST, "a1")
    field(TWVL, "2")
    field(TWST, "a2")
    field(THVL, "3")
    field(THST, "a3")
    field(FRVL, "4")
    field(FRST, "a4")
    field(FVVL, "5")
    field(FVST, "a5")
    field(SXVL, "6")
    field(SXST, "a6")
    field(SVVL, "7")
    field(SVST, "a7")
    field(EIVL, "8")
    field(EIST, "a8")
    field(NIVL, "9")
    field(NIST, "a9")
    field(TEVL, "10")
    field(TEST, "a10")
    field(ELVL, "11")
    field(ELST, "a11")
    field(TVVL, "12")
    field(TVST, "a12")
    field(TTVL, "13")
    field(TTST, "a13")
    field(FTVL, "14")
    field(FTST, "a14")
    field(FFVL, "15")
    field(FFST, "a15")
}
record(mbbo, "$(BL)$(CS8_2):MoveDewarB")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_dewar_b($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "b0")
    field(ONVL, "1")
    field(ONST, "b1")
    field(TWVL, "2")
    field(TWST, "b2")
    field(THVL, "3")
    field(THST, "b3")
    field(FRVL, "4")
    field(FRST, "b4")
    field(FVVL, "5")
    field(FVST, "b5")
    field(SXVL, "6")
    field(SXST, "b6")
    field(SVVL, "7")
    field(SVST, "b7")
    field(EIVL, "8")
    field(EIST, "b8")
    field(NIVL, "9")
    field(NIST, "b9")
    field(TEVL, "10")
    field(TEST, "b10")
    field(ELVL, "11")
    field(ELST, "b11")
    field(TVVL, "12")
    field(TVST, "b12")
    field(TTVL, "13")
    field(TTST, "b13")
    field(FTVL, "14")
    field(FTST, "b14")
    field(FFVL, "15")
    field(FFST, "b15")
}
record(mbbo, "$(BL)$(CS8_2):MoveDewarC")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_dewar_c($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "c0")
    field(ONVL, "1")
    field(ONST, "c1")
    field(TWVL, "2")
    field(TWST, "c2")
    field(THVL, "3")
    field(THST, "c3")
    field(FRVL, "4")
    field(FRST, "c4")
    field(FVVL, "5")
    field(FVST, "c5")
    field(SXVL, "6")
    field(SXST, "c6")
    field(SVVL, "7")
    field(SVST, "c7")
    field(EIVL, "8")
    field(EIST, "c8")
    field(NIVL, "9")
    field(NIST, "c9")
    field(TEVL, "10")
    field(TEST, "c10")
    field(ELVL, "11")
    field(ELST, "c11")
    field(TVVL, "12")
    field(TVST, "c12")
    field(TTVL, "13")
    field(TTST, "c13")
    field(FTVL, "14")
    field(FTST, "c14")
    field(FFVL, "15")
    field(FFST, "c15")
}
record(mbbo, "$(BL)$(CS8_2):MoveBeam")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_beam($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "loopSample")
    field(ONVL, "1")
    field(ONST, "plateSample")
}
record(mbbo, "$(BL)$(CS8_2):MoveTest")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) move_test($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "diagonalOut")
    field(ONVL, "1")
    field(ONST, "diagonalIn")
    field(TWVL, "2")
    field(TWST, "XOut")
    field(THVL, "3")
    field(THST, "xIn")
    field(FRVL, "4")
    field(FRST, "zIn")
    field(FVVL, "5")
    field(FVST, "zOut")
    field(SXVL, "6")
    field(SXST, "loopSample")
    field(SVVL, "7")
    field(SVST, "plateSample")
}

#record(ao, "$(BL)$(CS8_2):MoveX")
#{
#    field(DESC, "")
#    field(DTYP, "stream")
#    field(OUT,  "@$(PROTO) move_x($(BL)$(CS8_2)) $(PORT)")
#}
#record(ao, "$(BL)$(CS8_2):MoveY")
#{
#    field(DESC, "")
#    field(DTYP, "stream")
#    field(OUT,  "@$(PROTO) move_y($(BL)$(CS8_2)) $(PORT)")
#}
#record(ao, "$(BL)$(CS8_2):MoveZ")
#{
#    field(DESC, "")
#    field(DTYP, "stream")
#    field(OUT,  "@$(PROTO) move_z($(BL)$(CS8_2)) $(PORT)")
#}

#############################################         MOVEMENTS END        ##########################################

#############################################         CONTROL BEGIN         #########################################
record(bo, "$(BL)$(CS8_2):Power")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) power($(BL)$(CS8_2)) $(PORT)")
    field(ZNAM, "Off")
    field(ONAM, "On")
}
record(bo, "$(BL)$(CS8_2):Gripper")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) gripper($(BL)$(CS8_2)) $(PORT)")
    field(ZNAM, "Close")
    field(ONAM, "Open")
}
record(bo, "$(BL)$(CS8_2):StopMove")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) stop_move($(BL)$(CS8_2)) $(PORT)")
    field(ZNAM, "Move")
    field(ONAM, "Stop")
}
record(bo, "$(BL)$(CS8_2):DeleteMove")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) delete_move($(BL)$(CS8_2)) $(PORT)")
}

record(bi, "$(BL)$(CS8_2):isSettled")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(INP,  "@$(PROTO) is_settled($(BL)$(CS8_2)) $(PORT)")
    field(ZNAM, "notSettled")
    field(ONAM, "Settled")
}
record(bi, "$(BL)$(CS8_2):isEmpty")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(INP,  "@$(PROTO) is_empty($(BL)$(CS8_2)) $(PORT)")
    field(ZNAM, "notEmpty")
    field(ONAM, "Empty")
}
#############################################         CONTROL END         ##########################################

#############################################         VARIABLES BEGIN         ##########################################
record(ao, "$(BL)$(CS8_2):SetMoveBeamX")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_move_beam_x($(BL)$(CS8_2)) $(PORT)")
}
record(ao, "$(BL)$(CS8_2):SetMoveBeamY")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_move_beam_y($(BL)$(CS8_2)) $(PORT)")
}
record(ao, "$(BL)$(CS8_2):SetMoveBeamZ")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_move_beam_z($(BL)$(CS8_2)) $(PORT)")
}

record(mbbo, "$(BL)$(CS8_2):Set")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Set")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Set")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Set")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) set_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}

record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
record(mbbo, "$(BL)$(CS8_2):Get")
{
    field(DESC, "")
    field(DTYP, "stream")
    field(OUT,  "@$(PROTO) Get_($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "")
    field(ONVL, "1")
    field(ONST, "")
    field(TWVL, "2")
    field(TWST, "")
    field(THVL, "3")
    field(THST, "")
    field(FRVL, "4")
    field(FRST, "")
    field(FVVL, "5")
    field(FVST, "")
    field(SXVL, "6")
    field(SXST, "")
    field(SVVL, "7")
    field(SVST, "")
}
#############################################         VARIABLES END         ##########################################



record(ao,"$(BL)$(CS8_2):SetVelL")
{
  field(DESC,"Set Linear Velocity")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto set_vell($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetVelL")
{
  field(DESC,"Get Linear Velocity")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_vell($(BL)$(CS8_2)) $(PORT)")
}

record(ao,"$(BL)$(CS8_2):SetVelJ")
{
  field(DESC,"Set Joint Velocity")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto set_velj($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetVelJ")
{
  field(DESC,"Get Joint Velocity")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_velj($(BL)$(CS8_2)) $(PORT)")
}

record(ao,"$(BL)$(CS8_2):SetVelR")
{
  field(DESC,"Set Rotation Velocity")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto set_velr($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetVelR")
{
  field(DESC,"Get Rotation Velocity")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_velr($(BL)$(CS8_2)) $(PORT)")
}

record(ao,"$(BL)$(CS8_2):SetAccel")
{
  field(DESC,"Set Acceleration")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto set_accel($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetAccel")
{
  field(DESC,"Get Acceleration")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_accel($(BL)$(CS8_2)) $(PORT)")
  #field(SCAN, "1 second")
}

record(ao,"$(BL)$(CS8_2):PickPlate")
{
  field(DESC,"Pick Plate N and move to Beam")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto pick_plate($(BL)$(CS8_2)) $(PORT)")
}

record(ao,"$(BL)$(CS8_2):ReturnPlate")
{
  field(DESC,"return Plate to N Hotel floor")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto return_plate($(BL)$(CS8_2)) $(PORT)")
}

record(ao,"$(BL)$(CS8_2):PickCrystal")
{
  field(DESC,"Get Crystal N and move to Beam")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto pick_crystal($(BL)$(CS8_2)) $(PORT)")
}

record(mbbo, "$(BL)$(CS8_2):SetTool")
{
    field(DESC, "Set Robot Tool")
    field(DTYP, "stream")
    field(OUT,  "@Staubli2.proto set_tool($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "Flange")
    field(ONVL, "1")
    field(ONST, "Ops")
    field(TWVL, "2")
    field(TWST, "Spike")
    field(THVL, "3")
    field(THST, "Gripper")
    field(FRVL, "4")
    field(FRST, "Plate1")
    field(FVVL, "5")
    field(FVST, "Plate2")
    field(SXVL, "6")
    field(SXST, "Plate3")
    field(SVVL, "7")
    field(SVST, "Sample")
    field(EIVL, "8")
    field(EIST, "Microscope")
    field(NIVL, "9")
    field(NIST, "Free")
    field(TEVL, "10")
    field(TEST, "Free")
    field(ELVL, "11")
    field(ELST, "Free")
    field(TVVL, "12")
    field(TVST, "Free")
    field(TTVL, "13")
    field(TTST, "Free")
    field(FTVL, "14")
    field(FTST, "Free")
    field(FFVL, "15")
    field(FFST, "Free")
}

record(mbbi, "$(BL)$(CS8_2):GetTool")
{
	field(DESC, "Get Robot Tool")
	field(DTYP, "stream")
	field(INP,"@Staubli2.proto get_tool($(BL)$(CS8_2)) $(PORT)")
	field(ZRVL, "0")
    	field(ZRST, "Flange")
    	field(ONVL, "1")
    	field(ONST, "Ops")
    	field(TWVL, "2")
    	field(TWST, "Spike")
    	field(THVL, "3")
    	field(THST, "Gripper")
    	field(FRVL, "4")
    	field(FRST, "Plate1")
    	field(FVVL, "5")
    	field(FVST, "Plate2")
    	field(SXVL, "6")
    	field(SXST, "Plate3")
    	field(SVVL, "7")
    	field(SVST, "Sample")
    	field(EIVL, "8")
    	field(EIST, "Microscope")
}

record(mbbo, "$(BL)$(CS8_2):SetFrame")
{
    field(DESC, "Set Robot frame")
    field(DTYP, "stream")
    field(OUT,  "@Staubli2.proto set_frame($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "Home")
    field(ONVL, "1")
    field(ONST, "Hotel")
    field(TWVL, "2")
    field(TWST, "Beam")
    field(THVL, "3")
    field(THST, "Dewar")
    field(FRVL, "4")
    field(FRST, "Free")
}

record(mbbi, "$(BL)$(CS8_2):GetFrame")
{
    field(DESC, "Get Robot frame")
    field(DTYP, "stream")
    field(INP,  "@Staubli2.proto get_frame($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "Home")
    field(ONVL, "1")
    field(ONST, "Hotel")
    field(TWVL, "2")
    field(TWST, "Beam")
    field(THVL, "3")
    field(THST, "Dewar")
    field(FRVL, "4")
    field(FRST, "Free")
    #field(FLNK, "$(BL):$(CS8_2):SetMode")
}

record(mbbo, "$(BL)$(CS8_2):SetMode")
{
    field(DESC, "Set Robot Mode")
    field(DTYP, "stream")
    field(OUT,  "@Staubli2.proto set_mode($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "Off")
    field(ONVL, "1")
    field(ONST, "Calibration")
    field(TWVL, "2")
    field(TWST, "Plate")
    field(THVL, "3")
    field(THST, "PlateScan")
    field(FRVL, "4")
    field(FRST, "PlateScanR")
    field(FVVL, "5")
    field(FVST, "AutoCrystal")
    field(SXVL, "6")
    field(SXST, "Free")
}

record(mbbo, "$(BL)$(CS8_2):ChangeTool")
{
    field(DESC, "Change Robot Tool")
    field(DTYP, "stream")
    field(OUT,  "@Staubli2.proto change_tool($(BL)$(CS8_2)) $(PORT)")
    field(ZRVL, "0")
    field(ZRST, "Flange")
    field(ONVL, "1")
    field(ONST, "Ops")
    field(TWVL, "2")
    field(TWST, "Spike")
    field(THVL, "3")
    field(THST, "Gripper")
    field(FRVL, "4")
    field(FRST, "Plate1")
    field(FVVL, "5")
    field(FVST, "Plate2")
    field(SXVL, "6")
    field(SXST, "Plate3")
    field(SVVL, "7")
    field(SVST, "Sample")
    field(EIVL, "8")
    field(EIST, "Microscope")
    field(NIVL, "9")
    field(NIST, "Free")
}

record(ao,"$(BL)$(CS8_2):MoveX")
{
  field(DESC,"Move in X direction")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto move_x($(BL)$(CS8_2)) $(PORT)")
}

record(ao, "$(BL)$(CS8_2):MoveY")
{
  field(DESC,"Move in Y direction")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto move_y($(BL)$(CS8_2)) $(PORT)")
}

record(ao, "$(BL)$(CS8_2):MoveZ")
{
  field(DESC,"Move in Z direction")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto move_z($(BL)$(CS8_2)) $(PORT)")
}

record(ao, "$(BL)$(CS8_2):MoveOmega")
{
  field(DESC,"Move sixth joint by Omega")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto move_omega($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetX")
{
  field(DESC,"Get position X")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_x($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetY")
{
  field(DESC,"Get position Y")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_y($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetZ")
{
  field(DESC,"Get position Z")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_z($(BL)$(CS8_2)) $(PORT)")
}

record(ai,"$(BL)$(CS8_2):GetOmega")
{
  field(DESC,"Get sixth joint angle Omega")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto get_omega($(BL)$(CS8_2)) $(PORT)")
}

record(stringin,"$(BL)$(CS8_2):Here")
{
  field(DESC,"Get arm tool position")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto here($(BL)$(CS8_2)) $(PORT)")
}

record(mbbi,"$(BL)$(CS8_2):CheckMoving")
{
  field(DESC,"Check if robot is moving")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto check_moving($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Moving")
  field(ONVL, "1")
  field(ONST, "Stopped")
}

record(mbbi,"$(BL)$(CS8_2):WorkingMode")
{
  field(DESC,"Get robot VAL3 working mode")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto working_mode($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Error/Invalid")
  field(ONVL, "1")
  field(ONST, "Manual")
  field(TWVL, "2")
  field(TWST, "Teste")
  field(THVL, "3")
  field(THST, "Local")
  field(FRVL, "4")
  field(FRST, "Remoto")
}

record(mbbi,"$(BL)$(CS8_2):Status")
{
  field(DESC,"Get robot movement status")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto status($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Movimento programado")
  field(ONVL, "1")
  field(ONST, "Movimento de correcao")
  field(TWVL, "2")
  field(TWST, "Parado(Remoto)")
  field(THVL, "3")
  field(THST, "Cartesiano(Manual)")
  field(FRVL, "4")
  field(FRST, "Ferramenta(Manual)")
  field(FVVL, "5")
  field(FVST, "Ponto(Manual)")
  field(SXVL, "6")
  field(SXST, "Parado(Manual)")
}

record(mbbi,"$(BL)$(CS8_2):Stopped")
{
  field(DESC,"check if robot is stopped")
  field(DTYP,"stream")
  field(INP,"@Staubli2.proto stopped($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Robo em movimento")
  field(ONVL, "1")
  field(ONST, "Robo parado")
}

record(mbbo, "$(BL)$(CS8_2):UseGripper")
{
  field(DESC,"1 to open gripper and 0 to close it")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto use_gripper($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Close")
  field(ONVL, "1")
  field(ONST, "Open")
}

record(mbbo, "$(BL)$(CS8_2):GoHome")
{
  field(DESC,"Sendo robot do default position")
  field(DTYP,"stream")
  field(OUT,"@Staubli2.proto go_home($(BL)$(CS8_2)) $(PORT)")
  field(ZRVL, "0")
  field(ZRST, "Close")
  field(ONVL, "1")
  field(ONST, "Open")
}

record(seq, "$(BL)$(CS8_2):_seq"){
  field(LNK1, "$(BL)$(CS8_2):GetAccel.PROC")
  field(LNK2, "$(BL)$(CS8_2):GetVelJ.PROC")
  field(LNK3, "$(BL)$(CS8_2):GetVelL.PROC")
  field(LNK4, "$(BL)$(CS8_2):GetVelR.PROC")
  field(LNK5, "$(BL)$(CS8_2):GetOmega.PROC")
  field(LNK6, "$(BL)$(CS8_2):GetX.PROC")
  field(LNK7, "$(BL)$(CS8_2):GetY.PROC")
  field(LNK8, "$(BL)$(CS8_2):GetZ.PROC")
  field(PINI, "YES")
  field(SCAN, "1 second")
}

record(seq, "$(BL)$(CS8_2):_seq2"){
  field(LNK1, "$(BL)$(CS8_2):GetTool.PROC")
  field(LNK2, "$(BL)$(CS8_2):GetFrame.PROC")
  #field(LNK3, "$(BL)$(CS8_2):CheckMoving.PROC")
  field(LNK3, "$(BL)$(CS8_2):WorkingMode.PROC")
  field(LNK4, "$(BL)$(CS8_2):Status.PROC")
  field(LNK5, "$(BL)$(CS8_2):Stopped.PROC")
  field(PINI, "YES")
  field(SCAN, "1 second")
}
